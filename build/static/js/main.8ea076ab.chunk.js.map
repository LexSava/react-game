{"version":3,"sources":["utils/consts.js","hooks/useEvent.js","hooks/useLocalStorage.js","utils/addNumber.js","utils/initialize.js","utils/isExist.js","utils/audio.js","utils/disableScrolling.js","utils/getColors.js","components/Block.js","components/GameDescription.js","components/GameOver.js","components/Score.js","components/Head.js","components/RangeSlider.js","components/VolumeMenu.js","components/BoardSize.js","components/ActionPanel.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_DATA","useEvent","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","addNumber","newGrid","added","rand1","Math","floor","random","rand2","initialize","data","setData","setNewGame","cloneDeep","isExist","array","term","found","i","length","some","blockMovementPlayAudio","volume","sound","Audio","play","disableScrolling","document","onkeydown","evt","keyCode","getColors","num","Block","className","style","background","color","GameDescription","width","GameOver","reset","onClick","Score","score","best","Head","RangeSlider","memo","classes","label","onChange","sliderProps","sliderVal","setSliderVal","mouseState","setMouseState","type","id","e","target","onMouseDown","onMouseUp","VolumeMenu","onChildClick","audio","parentVal","setParentVal","playing","setPlaying","muteSound","vol","handleClick","pause","sliderValueChanged","useCallback","val","useMemo","min","max","step","fontSize","BoardSize","map","option","nop","ActionPanel","onClickUndo","disableUndo","onClickReplay","disableReplay","display","justifyContent","textAlign","Footer","href","src","App","gameOver","setGameOver","setScore","setBest","scoreHistory","setScoreHistory","newGame","isWon","setIsWon","moveHistory","setMoveHistory","undoMoves","setUndoMoves","replayStatus","setReplayStatus","setValue","swipeLeft","isMove","oldGrid","newArray","b","slow","fast","checkGameOver","swipeRight","swipeDown","oldData","swipeUp","resetGame","emptyGrid","onSwipeDown","onSwipeLeft","onSwipeRight","onSwipeUp","overflowY","row","oneIndex","digit","index","history","lastMove","pop","push","setTimeout","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ea076ab.chunk.js","sourcesContent":["export const UP_ARROW = 38;\r\nexport const DOWN_ARROW = 40;\r\nexport const LEFT_ARROW = 37;\r\nexport const RIGHT_ARROW = 39;\r\nexport const INITIAL_DATA = [\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n  [0, 0, 0, 0],\r\n];","import { useEffect } from \"react\";\r\n\r\nconst useEvent = (event, handler, passive = false) => {\r\n    useEffect(() => {\r\n        window.addEventListener(event, handler, passive);\r\n        return function cleanup() {\r\n            window.removeEventListener(event, handler);\r\n        };\r\n    });\r\n};\r\nexport default useEvent;\r\n\r\n","import { useState } from 'react';\n\nconst useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n};\nexport default useLocalStorage;\n","const addNumber = (newGrid) => {\r\n    let added = false;\r\n    while (!added) {\r\n        let rand1 = Math.floor(Math.random() * 4);\r\n        let rand2 = Math.floor(Math.random() * 4);\r\n        if (newGrid[rand1][rand2] === 0) {\r\n            newGrid[rand1][rand2] = 2;\r\n            added = true;\r\n        }\r\n    }\r\n};\r\nexport default addNumber;","import addNumber from \"./addNumber\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\n\r\nconst initialize = (data, setData, setNewGame) => {\r\n    let newGrid = cloneDeep(data);\r\n    addNumber(newGrid);\r\n    addNumber(newGrid);\r\n    { setData(newGrid) }\r\n    { setNewGame(false); }\r\n};\r\n\r\nexport default initialize;","const isExist = (array, term=0) => {\n  let found = false;\n  for (let i = 0; i < array.length; i++) {\n    found = array[i].some((i) => i === term);\n    if (found) break;\n  }\n  return found;\n};\n\nexport default isExist;","const blockMovementPlayAudio = (volume = 0.2) => {\r\n    const sound = new Audio(\"./audios/block_movement.mp3\");\r\n    sound.volume = volume;\r\n    return sound.play();\r\n}\r\n\r\nexport default blockMovementPlayAudio;","const disableScrolling = () => {\r\n    document.onkeydown = function (evt) {\r\n        evt = evt || window.event;\r\n        var keyCode = evt.keyCode;\r\n        if (keyCode >= 37 && keyCode <= 40) {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nexport default disableScrolling;","const getColors = (num) => {\r\n    switch (num) {\r\n        case 2:\r\n            return \"#EBDCD0\";\r\n        case 4:\r\n            return \"#E9DBBA\";\r\n        case 8:\r\n            return \"#E9A067\";\r\n        case 16:\r\n            return \"#F08151\";\r\n        case 32:\r\n            return \"#F2654F\";\r\n        case 64:\r\n            return \"#F1462C\";\r\n        case 128:\r\n            return \"#E7C65E\";\r\n        case 256:\r\n            return \"#E8C350\";\r\n        case 512:\r\n            return \"#E8BE40\";\r\n        case 1024:\r\n            return \"#E8BB31\";\r\n        case 2048:\r\n            return \"#E7B723\";\r\n        default:\r\n            return \"#C2B3A3\";\r\n    }\r\n};\r\nexport default getColors;","import getColors from \"../utils/getColors\";\r\n\r\nconst Block = ({ num }) => {\r\n    \r\n    return (\r\n        <div\r\n            className={num >= 2 ? \"block_style\" + \" \" + \"new\" : \"block_style\"}\r\n            style={{\r\n                background: getColors(num),\r\n                color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\",\r\n            }}\r\n        >\r\n            {num !== 0 ? num : \"\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Block;","const GameDescription = () => {\r\n    \r\n    return (\r\n        <div style={{ width: \"inherit\" }}>\r\n            <p className={\"game-explanation\" + \" \" + \"unselectable\"}>\r\n                <strong className={\"important\" + \" \" + \"unselectable\"}>How to play:</strong> Use your{\" \"}\r\n                <strong>arrow keys</strong> to move the tiles. When two tiles with\r\n   the same number touch, they <strong>merge into one!</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameDescription;","const GameOver = ({ reset }) => {\r\n    \r\n    return (\r\n        <div className={\"game_over_overlay\"}>\r\n            <div>\r\n                <div\r\n                    className={\"game_over_overlay_message\"}\r\n                >\r\n                    Game Over\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div onClick={reset} className={\"try_again_button\"}>\r\n                            Try Again\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default GameOver;","const Score = ({ score, best }) => {\r\n    \r\n    return (\r\n        <div className={\"score_block\"}>\r\n            <div className={\"score_block_element\"}>\r\n                <span className={\"score_block_element_head\"}>\r\n                    score\r\n                </span>\r\n                <span>\r\n                    {score}\r\n                </span>\r\n            </div>\r\n            <div className={\"score_block_element\"}>\r\n                <span className={\"score_block_element_head\"}>\r\n                    best\r\n                </span>\r\n                <span>\r\n                    {best}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Score;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Score from \"./Score\";\r\n\r\nconst Head = ({ reset, score, best }) => {\r\n    \r\n    return (\r\n        <div className={\"head\"}>\r\n            <div className={\"logo\"}>\r\n                2048\r\n            </div>\r\n            <div> <Score score={score} best={best} />\r\n                <div className={\"new_game_button_block\"}>\r\n                    <div onClick={reset} className={\"new_game_button\"}>\r\n                        NEW GAME\r\n          </div>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default Head;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { memo, useState, useEffect, } from \"react\";\r\n\r\nconst RangeSlider = memo(\r\n  ({ classes, label, onChange, value, ...sliderProps }) => {\r\n    const [sliderVal, setSliderVal] = useState(0);\r\n    const [mouseState, setMouseState] = useState(null);\r\n\r\n    useEffect(() => {\r\n      setSliderVal(value);\r\n    }, [value]);\r\n\r\n    const changeCallback = e => {\r\n      setSliderVal(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (mouseState === \"up\") {\r\n        onChange(sliderVal);\r\n      }\r\n    }, [mouseState]);\r\n\r\n    return (\r\n      <div>\r\n        <h3 className={\"range_slider_head\"}>Music volume: {sliderVal}</h3>\r\n        <input\r\n          type=\"range\"\r\n          value={sliderVal}\r\n          {...sliderProps}\r\n          id=\"myRange\"\r\n          onChange={changeCallback}\r\n          onMouseDown={() => setMouseState(\"down\")}\r\n          onMouseUp={() => setMouseState(\"up\")}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default RangeSlider;","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport RangeSlider from \"./RangeSlider\"\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\nimport { BsFillVolumeMuteFill, BsFillVolumeUpFill } from \"react-icons/bs\";\r\n\r\nconst VolumeMenu = ({ onChildClick }) => {\r\n    const [audio] = useState(new Audio(\"./audios/background_melody.mp3\"));\r\n    const [parentVal, setParentVal] = useLocalStorage(\"parentVal\", 2);\r\n    const [playing, setPlaying] = useState(false,);\r\n    audio.volume = parentVal / 10;\r\n\r\n    const toggle = () => setPlaying(!playing);\r\n\r\n    const muteSound = (vol) => {\r\n        setParentVal(vol);\r\n    }\r\n\r\n    function handleClick(event) {\r\n        onChildClick(event);\r\n    }\r\n\r\n    useEffect(() => {\r\n        playing ? audio.play() : audio.pause();\r\n    },\r\n        [playing]\r\n    );\r\n\r\n    useEffect(() => {\r\n        audio.addEventListener('ended', () => setPlaying(false));\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setPlaying(false));\r\n        };\r\n    }, []);\r\n\r\n    const sliderValueChanged = useCallback(val => {\r\n        console.log(\"NEW VALUE\", val);\r\n        setParentVal(val);\r\n    });\r\n\r\n    const sliderProps = useMemo(\r\n        () => ({\r\n            min: 0,\r\n            max: 10,\r\n            value: parentVal,\r\n            step: 1,\r\n            onChange: e => sliderValueChanged(e)\r\n        }),\r\n        [parentVal]\r\n    );\r\n\r\n    return (\r\n        <div className=\"range_slider\">\r\n            <RangeSlider {...sliderProps} />\r\n            <button onClick={toggle} className={\"range_slider_button\"}>{playing ? \"Pause\" : \"Play\"}</button>\r\n            <button value=\"0\" onClick={() => { muteSound(0); handleClick(0) }} className={\"range_slider_button\"} > <BsFillVolumeMuteFill style={{ fontSize: \"20\" }} /></button>\r\n            <button value=\"0\" onClick={() => { muteSound(2); handleClick(0.2) }} className={\"range_slider_button\"} > <BsFillVolumeUpFill style={{ fontSize: \"20\" }} /></button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolumeMenu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst BoardSize = () => {\r\n\r\n    const options = [\r\n        {\r\n            label: \"4 x 4\",\r\n            value: 4,\r\n        },\r\n        {\r\n            label: \"5 x 5\",\r\n            value: 5,\r\n        },\r\n        {\r\n            label: \"6 x 6\",\r\n            value: 6,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div >\r\n            <h3 className={\"range_slider_head\" + \" \" + \"unselectable\"}>Board size</h3>\r\n            {options.map((option) => (\r\n                <button key={option.value} value={option.value} className={\"new_game_button\" + ' ' + \"margin_btn_BoardSize\"}>{option.label} </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoardSize;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { BsArrowReturnLeft, BsArrowClockwise } from \"react-icons/bs\";\r\n\r\nconst nop = () => { };\r\n\r\nconst ActionPanel = ({ onClickUndo,\r\n    disableUndo,\r\n    onClickReplay,\r\n    disableReplay,\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h3 className={\"range_slider_head\" + \" \" + \"unselectable\"}>One turn back</h3>\r\n                    <div className={\"new_game_button\" + ' ' + \"margin_btn_BoardSize\"} onClick={!disableUndo ? onClickUndo : nop}>\r\n                        <BsArrowReturnLeft />\r\n                    </div>\r\n                </div>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h3 className={\"range_slider_head\" + \" \" + \"unselectable\"}>History of moves</h3>\r\n                    <div className={\"new_game_button\" + ' ' + \"margin_btn_BoardSize\"} onClick={!disableReplay ? onClickReplay : nop}>\r\n                        <BsArrowClockwise />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionPanel;","const Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className={\"game-explanation\" + \" \" + \"unselectable\"}>\r\n                <strong className={\"important\" + \" \" + \"unselectable\"}> Created by <a href=\"https://github.com/LexSava\" target=\"_blank\">Lex Sava. </a> 2021 </strong>\r\n            </p>\r\n            <div style={{ width: 50 }}>\r\n                <a href=\"https://rs.school/js/\" target=\"_blank\">\r\n                    <img src=\"./img/rs_school_js.svg\" />\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport Swipe from \"react-easy-swipe\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, INITIAL_DATA } from \"./utils/consts\";\nimport useEvent from \"./hooks/useEvent\";\nimport useLocalStorage from './hooks/useLocalStorage';\nimport initialize from \"./utils/initialize\";\nimport addNumber from \"./utils/addNumber\";\nimport isExist from './utils/isExist';\nimport blockMovementPlayAudio from './utils/audio';\nimport disableScrolling from './utils/disableScrolling';\nimport Block from \"./components/Block\";\nimport GameDescription from \"./components/GameDescription\";\nimport GameOver from \"./components/GameOver\";\nimport Head from \"./components/Head\";\nimport VolumeMenu from \"./components/VolumeMenu\";\nimport BoardSize from \"./components/BoardSize\";\nimport ActionPanel from \"./components/ActionPanel\";\nimport Footer from \"./components/Footer\";\nimport \"./style/style.css\";\n\nfunction App() {\n\n  const [data, setData] = useLocalStorage('data', INITIAL_DATA);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useLocalStorage('score', 0);\n  const [best, setBest] = useLocalStorage('best', 0);\n  const [scoreHistory, setScoreHistory] = useLocalStorage('scoreHistory', []);\n  const [newGame, setNewGame] = useLocalStorage('newGame', true);\n  const [isWon, setIsWon] = useLocalStorage('isWon', false);\n  const [moveHistory, setMoveHistory] = useLocalStorage('moveHistory', []);\n  const [undoMoves, setUndoMoves] = useLocalStorage('undoMoves', []);\n  const [replayStatus, setReplayStatus] = useLocalStorage(\n    'replayStatus',\n    false\n  );\n  const [value, setValue] = useState(0.2);\n\n  function handleChildClick(vol) {\n    setValue(vol);\n  }\n\n  //Swipe \n  const swipeLeft = (isMove = true) => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let b = newArray[i];\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast++;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            setScore(score + b[slow]);\n            b[fast] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n      setMoveHistory([...moveHistory, oldGrid]);\n      if (isExist(newArray, 2048)) {\n        setIsWon(true);\n        setData(newArray);\n      } else addNumber(newArray);\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\n      setGameOver(true);\n    }\n    if (isMove) {\n      setData(newArray);\n    } else return newArray;\n  };\n\n  const swipeRight = (isMove = true) => {\n    let oldGrid = data;\n    let newArray = cloneDeep(data);\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 3; i >= 0; i--) {\n      let b = newArray[i];\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow] === 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] === 0 && b[fast] !== 0) {\n          b[slow] = b[fast];\n          b[fast] = 0;\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] === 0) {\n          fast--;\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\n          if (b[slow] === b[fast]) {\n            b[slow] = b[slow] + b[fast];\n            setScore(score + b[slow]);\n            b[fast] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(newArray) !== JSON.stringify(oldGrid)) {\n      setMoveHistory([...moveHistory, oldGrid]);\n      if (isExist(newArray, 2048)) {\n        setIsWon(true);\n        setData(newArray);\n      } else addNumber(newArray);\n    } else if (!isExist(oldGrid) && isMove && checkGameOver()) {\n      setGameOver(true);\n    }\n    if (isMove) {\n      setData(newArray);\n    } else return newArray;\n  };\n\n  const swipeDown = (isMove = true) => {\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    if (replayStatus) {\n      return;\n    }\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 3; i >= 0; i--) {\n      let slow = b.length - 1;\n      let fast = slow - 1;\n      while (slow > 0) {\n        if (fast === -1) {\n          fast = slow - 1;\n          slow--;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast--;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            setScore(score + b[slow][i]);\n            b[fast][i] = 0;\n            fast = slow - 1;\n            slow--;\n          } else {\n            slow--;\n            fast = slow - 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n      setMoveHistory([...moveHistory, oldData]);\n      if (isExist(b, 2048)) {\n        setIsWon(true);\n        setData(b);\n      } else addNumber(b);\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\n      setGameOver(true);\n    }\n    if (isMove) {\n      setData(b);\n    } else return b;\n  };\n\n  const swipeUp = (isMove = true) => {\n    let b = cloneDeep(data);\n    let oldData = JSON.parse(JSON.stringify(data));\n\n    if (replayStatus) {\n      return;\n    }\n\n    if (undoMoves.length) {\n      setUndoMoves([]);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let slow = 0;\n      let fast = 1;\n      while (slow < 4) {\n        if (fast === 4) {\n          fast = slow + 1;\n          slow++;\n          continue;\n        }\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n          b[slow][i] = b[fast][i];\n          b[fast][i] = 0;\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n          fast++;\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n          if (b[slow][i] === b[fast][i]) {\n            b[slow][i] = b[slow][i] + b[fast][i];\n            setScore(score + b[slow][i]);\n            b[fast][i] = 0;\n            fast = slow + 1;\n            slow++;\n          } else {\n            slow++;\n            fast = slow + 1;\n          }\n        }\n      }\n    }\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n      setMoveHistory([...moveHistory, oldData]);\n      if (isExist(b, 2048)) {\n        setIsWon(true);\n        setData(b);\n      } else addNumber(b);\n    } else if (!isExist(oldData) && isMove && checkGameOver()) {\n      setGameOver(true);\n    }\n    if (isMove) {\n      setData(b);\n    } else return b;\n  };\n\n  // Check Gameover\n  const checkGameOver = () => {\n    if (JSON.stringify(data) !== JSON.stringify(swipeLeft(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeRight(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeUp(false))) {\n      return false;\n    } else if (JSON.stringify(data) !== JSON.stringify(swipeDown(false))) {\n      return false;\n    } else return true;\n  };\n\n  const handleKeyDown = (event) => {\n    if (gameOver) {\n      return;\n    }\n    switch (event.keyCode) {\n      case UP_ARROW:\n        swipeUp();\n        blockMovementPlayAudio(value);\n        break;\n      case DOWN_ARROW:\n        swipeDown();\n        blockMovementPlayAudio(value);\n        break;\n      case LEFT_ARROW:\n        swipeLeft();\n        blockMovementPlayAudio(value);\n        break;\n      case RIGHT_ARROW:\n        swipeRight();\n        blockMovementPlayAudio(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Reset\n  const resetGame = () => {\n    setGameOver(false);\n    const emptyGrid = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    setScoreHistory([...scoreHistory, score]);\n    addNumber(emptyGrid);\n    addNumber(emptyGrid);\n    setData(emptyGrid);\n    setReplayStatus(false);\n    setScore(0);\n    setIsWon(false);\n    setMoveHistory([]);\n    setUndoMoves([]);\n  };\n\n  // Undo\n  const onClickUndo = () => {\n    const history = cloneDeep(moveHistory);\n    const lastMove = history.pop();\n    setMoveHistory(history);\n    setUndoMoves([...undoMoves, data]);\n    setData(lastMove);\n  };\n\n  // Replay\n  const onClickReplay = () => {\n    setReplayStatus(true);\n    const history = cloneDeep(moveHistory);\n    history.push(data);\n    for (let i = 0; i < history.length; i++) {\n      setTimeout(() => {\n        console.log('replay in progress', i);\n        setData(history[i]);\n        if (i === history.length - 1) {\n          setReplayStatus(false);\n        }\n      }, i * 1000);\n    }\n  };\n\n  // Redo\n  const onClickRedo = () => {\n    const history = cloneDeep(moveHistory);\n    const uMoves = cloneDeep(undoMoves);\n    const nextMove = uMoves.pop();\n    history.push(data);\n    setMoveHistory(history);\n    setUndoMoves(uMoves);\n    setData(nextMove);\n  };\n\n  useEffect(() => {\n    if (newGame) {\n      initialize(data, setData, setNewGame);\n    }\n  }, [newGame]);\n\n  useEffect(() => {\n    setBest(Math.max(...scoreHistory, score));\n  }, [score]);\n\n\n  useEvent(\"keydown\", handleKeyDown);\n\n  return (\n    disableScrolling(),\n    <div className=\"App\">\n      <div\n        className={\"content\"}\n      >\n        <Head\n          score={score}\n          reset={resetGame}\n          best={best}\n        />\n        <div\n          className={\"playing_aield\"}\n        >\n          {gameOver && (\n            <GameOver reset={resetGame} />\n          )}\n          <Swipe\n            onSwipeDown={() => swipeDown()}\n            onSwipeLeft={() => swipeLeft()}\n            onSwipeRight={() => swipeRight()}\n            onSwipeUp={() => swipeUp()}\n            style={{ overflowY: \"hidden\" }}\n          >\n            {data.map((row, oneIndex) => {\n              return (\n                <div style={{ display: \"flex\" }} key={oneIndex}>\n                  {row.map((digit, index) => (\n                    <Block num={digit} key={index} />\n                  ))}\n                </div>\n              );\n            })}\n          </Swipe>\n        </div>\n        <GameDescription />\n        <VolumeMenu onChildClick={handleChildClick} />\n        <ActionPanel\n          onClickUndo={onClickUndo}\n          disableUndo={!moveHistory.length || replayStatus || isWon}\n          onClickReplay={onClickReplay}\n          disableReplay={replayStatus || !moveHistory.length}\n        />\n        <BoardSize />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}